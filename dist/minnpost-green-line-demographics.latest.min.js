/*! minnpost-green-line-demographics - LATEST VERSION - 2014-06-06
* https://github.com/minnpost/minnpost-green-line-demographics
* Copyright (c) 2014 MinnPost; Licensed MIT */

define("helpers",["jquery","underscore"],function(a,b){var c={};return c.overrideBackboneAJAX=function(){Backbone.ajax=function(){var a=arguments;return a[0].dataTypeForce!==!0&&(a[0].dataType="jsonp",a[0].jsonpCallback="mpServerSideCachingHelper"+b.hash(a[0].url)),Backbone.$.ajax.apply(Backbone.$,a)}},c.isMSIE=function(){var a=/(msie) ([\w.]+)/i.exec(navigator.userAgent);return a?parseInt(a[2],10):!1},c.jsonpRequest=function(b){var c=b||{};return c.dataType="jsonp",a.ajax.apply(a,[c])},c.getLocalData=function(d,e){var f=!1,g=[];return d=b.isArray(d)?d:[d],e&&e.paths&&0===e.paths.data.indexOf("http")&&(f=!0),b.each(d,function(b){var d;d=f?c.jsonpRequest({url:e.remoteProxy+encodeURI(e.paths.data+b)},e):a.getJSON(e.paths.data+b),g.push(d)}),a.when.apply(a,g)},c.parseQueryString=function(){var a={},c=function(a){return decodeURIComponent(a.replace(/\+/g," "))},d=location.search.substring(1),e=d.split("&");return b.each(e,function(b){var d=b.split("=");d.length>1&&(a[c(d[0])]=c(d[1]))}),a},c}),define("text!templates/application.mustache",[],function(){return'<div class="application-container">\n  <div class="message-container"></div>\n\n  <div class="content-container">\n\n    <div class="loading-container">\n      <i class="loading"></i> Loading...\n    </div>\n\n    <div class="demographics-chooser cf">\n      <div class="demographic pop <%= (currentSet == \'pop\') ? \'active\' : \'\' %>" data-set="pop">\n        <div class="inside">\n          <div class="strong">Population density</div>\n          <div class="caption">Population per square square kilometer.</div>\n          <div class="legend"></div>\n        </div>\n      </div>\n\n      <div class="demographic income <%= (currentSet == \'income\') ? \'active\' : \'\' %>" data-set="income">\n        <div class="inside">\n          <div class="strong">Household income</div>\n          <div class="caption">Median household income for each tract.</div>\n          <div class="legend"></div>\n        </div>\n      </div>\n\n      <div class="demographic white <%= (currentSet == \'white\') ? \'active\' : \'\' %>" data-set="white">\n        <div class="inside">\n          <div class="strong">People of color</div>\n          <div class="caption">Percentage of population that are people of color (not white).</div>\n          <div class="legend"></div>\n        </div>\n      </div>\n\n      <div class="demographic transit <%= (currentSet == \'transit\') ? \'active\' : \'\' %>" data-set="transit">\n        <div class="inside">\n          <div class="strong">Public transit</div>\n          <div class="caption">Percentage of population that uses public transportation to commute to work.</div>\n          <div class="legend"></div>\n        </div>\n      </div>\n    </div>\n\n    <div class="map-container">\n      <div class="tooltip-container">\n        <div class="tooltip">\n          <div class="stop-info"></div>\n          <div class="tract-info"></div>\n        </div>\n      </div>\n\n      <div id="green-line-map"></div>\n    </div>\n\n  </div>\n\n  <div class="footnote-container">\n    <div class="footnote">\n      <p>\n        Line route and stop data provided by MetroTransit via the <a href="http://www.datafinder.org/" target="_blank">MetroGIS DataFinder</a>.\n\nSome code, techniques, and data on <a href="https://github.com/minnpost/minnpost-green-line-demographics" target="_blank">Github</a>.</p>\n    </div>\n  </div>\n</div>\n'}),define("minnpost-green-line-demographics",["jquery","underscore","d3","topojson","mpConfig","mpFormatters","helpers","text!templates/application.mustache"],function(a,b,c,d,e,f,g,h){var i=function(c){this.options=b.extend(this.defaultOptions,c),this.el=this.options.el,this.$el=a(this.el),this.$=function(a){return this.$el.find(a)},this.loadApp()};return b.extend(i.prototype,{start:function(){var a=this;this.sets={pop:{table:"B01003",column:"B01003001",prop:"by_area",colors:["#c8e0dc","#8bc1c7","#4da0bb","#087db2","#0d57a0"],format:c.format(",.2f")},white:{table:"B02008",column:"B02008001",prop:"by_population",colors:["#dcefd4","#d2d99c","#dabe66","#ec983c","#ff6633"],format:c.format("%,.2f")},income:{table:"B19013",column:"B19013001",prop:"estimate",colors:["#e6fde6","#daf8c4","#dbef9a","#e7e36f","#fbd341"],format:c.format("$,.0f")},transit:{table:"B08301",column:"B08301010",prop:"by_population",colors:["#e5f5ef","#c7ebe4","#a6e1dd","#81d6db","#55cbdd"],format:c.format("%,.2f")}},this.dataset="pop",this.templateApplication=b.template(h),this.$el.html(this.templateApplication({currentSet:this.dataset})),b.delay(function(){a.getData().done(function(){a.buildMap(),a.handleEvents()})},200)},buildMap:function(){var a=this,b=this.$el.find("#green-line-map"),e=b.width(),f=b.height(),g=c.select(b[0]).append("svg").attr("width",e).attr("height",f),h=this.data.greenLine,i=(c.geo.centroid(h),c.geo.mercator().scale(150).translate([e/2,f/2])),j=c.geo.path().projection(i).pointRadius(function(){return.0015}),k=this.featureGroup=g.append("g").attr("class","feature-group"),l=j.bounds(h);k.attr("transform","translate("+i.translate()+") scale("+.95/Math.max((l[1][0]-l[0][0])/e,(l[1][1]-l[0][1])/f)+") translate("+-(l[1][0]+l[0][0])/2+","+-(l[1][1]+l[0][1])/2+")"),this.data.tracts=d.feature(this.data.tractsTopo,this.data.tractsTopo.objects["census-tracts.geo"]),this.tracts=k.selectAll(".census-tract").data(this.data.tracts.features).enter().append("path").attr("class","census-tract").attr("d",j),this.data.landmarks=d.feature(this.data.landmarksTopo,this.data.landmarksTopo.objects["landmarks.geo"]),k.selectAll(".landmark-feature").data(this.data.landmarks.features).enter().append("path").attr("class",function(a){return"landmark-feature "+a.properties.type}).attr("d",j),k.selectAll(".greenline-route").data(this.data.greenLine.features).enter().append("path").attr("class","greenline-route").attr("d",j),k.selectAll(".stop").data(this.data.stops.features).enter().append("path").attr("class","stop").attr("d",j).attr("filter",function(a){a.stop=this}),this.voronoiStops=c.geom.voronoi().x(function(a){return i(a.geometry.coordinates)[0]}).y(function(a){return i(a.geometry.coordinates)[1]}).clipExtent([[0,0],[e,f]]),k.selectAll(".voronoi-stops").data(this.voronoiStops(this.data.stops.features)).enter().append("path").attr("class","voronoi-stops").attr("d",function(a){return"M"+a.join("L")+"Z"}).on("mouseover",function(b){c.select(b.point.stop).classed("active",!0),a.updateTooltip({stop:b.point.properties.Station+" station"})}).on("mouseout",function(b){c.select(b.point.stop).classed("active",!1),a.updateTooltip(!1)}),this.makeLegendsScales(),this.updateTracts()},handleEvents:function(){var b=this;this.$(".demographic").on("click",function(c){c.preventDefault();var d=a(this);b.$(".demographic").removeClass("active"),d.addClass("active"),b.dataset=d.data("set"),b.updateTracts()})},makeLegendsScales:function(){b.each(this.sets,function(a,b){a.access=function(b){return b.properties.data[a.table][a.prop][a.column]};var d=this.data.tracts.features.map(a.access).sort();a.scale=c.scale.quantile().domain(d).range(a.colors),c.select(".demographic."+b+" .legend").append("div").attr("class","legend-block end").text(a.format(d[0])),a.legend=c.select(".demographic."+b+" .legend").selectAll(".legend-block").data(a.scale.range()).enter().append("div").classed("legend-block",!0).attr("title",function(b){var c=a.scale.invertExtent(b);return">= "+a.format(c[0])+" and < "+a.format(c[1])}).style("background-color",function(a){return a}),c.select(".demographic."+b+" .legend").append("div").attr("class","legend-block end").text(a.format(d[d.length-1])),this.sets[b]=a},this)},updateTracts:function(){var a=this.sets[this.dataset];this.tracts.transition().duration(300).style("fill",function(b){return a.scale(a.access(b))})},updateTooltip:function(a){var c=this.$(".tooltip"),d=this.$(".tooltip .stop-info"),e=this.$(".tooltip .tract-info");a===!1?c.hide():c.show(),b.isObject(a)&&a.stop&&d.html(a.stop),b.isObject(a)&&a.tract&&e.html(a.tract)},getData:function(){var a=this;return g.getLocalData(["metrotransit-green-line.geo.json","metrotransit-green-line-stops.geo.json","landmarks.topo.json","census-tracts.topo.json"],this.options).done(function(b,c,d,e){a.data=a.data||{},a.data.greenLine=b[0],a.data.stops=c[0],a.data.landmarksTopo=d[0],a.data.tractsTopo=e[0],a.$el.find(".loading-container").slideUp("fast")})},defaultOptions:{projectName:"minnpost-green-line-demographics",remoteProxy:"http://mp-jsonproxy.herokuapp.com/proxy?callback=?&url=",el:".minnpost-green-line-demographics-container",availablePaths:{local:{css:[".tmp/css/main.css"],images:"images/",data:"data/"},build:{css:["//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css","dist/minnpost-green-line-demographics.libs.min.css","dist/minnpost-green-line-demographics.latest.min.css"],ie:["dist/minnpost-green-line-demographics.libs.min.ie.css","dist/minnpost-green-line-demographics.latest.min.ie.css"],images:"dist/images/",data:"dist/data/"},deploy:{css:["//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css","https://s3.amazonaws.com/data.minnpost/projects/minnpost-green-line-demographics/minnpost-green-line-demographics.libs.min.css","https://s3.amazonaws.com/data.minnpost/projects/minnpost-green-line-demographics/minnpost-green-line-demographics.latest.min.css"],ie:["https://s3.amazonaws.com/data.minnpost/projects/minnpost-green-line-demographics/minnpost-green-line-demographics.libs.min.ie.css","https://s3.amazonaws.com/data.minnpost/projects/minnpost-green-line-demographics/minnpost-green-line-demographics.latest.min.ie.css"],images:"https://s3.amazonaws.com/data.minnpost/projects/minnpost-green-line-demographics/images/",data:"https://s3.amazonaws.com/data.minnpost/projects/minnpost-green-line-demographics/data/"}}},loadApp:function(){this.determinePaths(),this.getLocalAssests(function(a){this.renderAssests(a),this.start()})},determinePaths:function(){var a;this.options.deployment="deploy",-1!==window.location.host.indexOf("localhost")&&(this.options.deployment="local",a=g.parseQueryString(),b.isObject(a)&&b.isString(a.mpDeployment)&&(this.options.deployment=a.mpDeployment)),this.options.paths=this.options.availablePaths[this.options.deployment]},getLocalAssests:function(b){var c=this;"local"===this.options.deployment?a.getJSON("bower.json",function(a){b.apply(c,[a.dependencyMap])}):b.apply(this,[])},renderAssests:function(c){var d=g.isMSIE()&&g.isMSIE()<=8;b.isObject(c)&&b.each(c,function(c){c.css&&b.each(c.css,function(b){b=b.match(/^(http|\/\/)/)?b:"bower_components/"+b+".css",a("head").append('<link rel="stylesheet" href="'+b+'" type="text/css" />')}),c.ie&&d&&b.each(c.ie,function(b){b=b.match(/^(http|\/\/)/)?b:"bower_components/"+b+".css",a("head").append('<link rel="stylesheet" href="'+b+'" type="text/css" />')})}),b.each(this.options.paths.css,function(b){a("head").append('<link rel="stylesheet" href="'+b+'" type="text/css" />')}),d&&b.each(this.options.paths.ie,function(b){a("head").append('<link rel="stylesheet" href="'+b+'" type="text/css" />')}),this.$el.addClass("processed")}}),i}),require(["jquery","minnpost-green-line-demographics"],function(a,b){a(document).ready(function(){new b})});